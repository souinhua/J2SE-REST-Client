/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cig.restca.view;

import com.cig.restca.controller.RESTClientController;
import com.cig.restca.json.JSONData;
import java.awt.Component;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author User
 */
public class TableFormFrame extends javax.swing.JFrame implements CenteredWindow {

    private final RESTClientController controller;
    private Stack<String> dataStack;
    private RESTClientFrame frame;

    public TableFormFrame(RESTClientFrame frame, RESTClientController controller) {
        initComponents();
        this.controller = controller;
        this.frame = frame;
        this.dataStack = new Stack<>();
    }

    public void showTabularForm(String data, String title) {
        this.setTitle(title + " Table Form");
        if (JSONData.isJSON(data)) {
            centerize();

            if (JSONData.isJSONArray(data)) {
                JSONArray array = new JSONArray(data);
                this.dataTable.setModel(controller.toTableModel(array));
            } else if (JSONData.isJSONObject(data)) {
                JSONObject object = new JSONObject(data);
                this.dataTable.setModel(controller.toTableModel(object));
            }

            this.dataStack.push(data);
            setVisible(true);
            this.repaint();
        } else {
            JOptionPane.showMessageDialog(frame, "Unreadable Data", "Data cannot be converted to a tabular form", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void centerize() {
        int parentWidth = frame.getWidth();
        int parentHeight = frame.getHeight();

        int width = this.getWidth();
        int height = this.getHeight();

        int pX = frame.getX();
        int pY = frame.getY();

        this.setLocation(pX + ((parentWidth / 2) - (width / 2)), pY + ((parentHeight / 2) - (height / 2)));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cellDataPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dataTextArea = new javax.swing.JTextArea();
        tableFrameBtn = new javax.swing.JButton();
        saveCsvBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        toolBar = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tableSettingsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/restclientlogo.png")).getImage());

        cellDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Cell Data"));

        dataTextArea.setColumns(20);
        dataTextArea.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        dataTextArea.setRows(5);
        dataTextArea.setPreferredSize(new java.awt.Dimension(250, 69));
        jScrollPane2.setViewportView(dataTextArea);

        tableFrameBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/small/glyphicons_119_table.png"))); // NOI18N
        tableFrameBtn.setText("Open Table Frame");
        tableFrameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableFrameBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cellDataPanelLayout = new javax.swing.GroupLayout(cellDataPanel);
        cellDataPanel.setLayout(cellDataPanelLayout);
        cellDataPanelLayout.setHorizontalGroup(
            cellDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cellDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cellDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(tableFrameBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        cellDataPanelLayout.setVerticalGroup(
            cellDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cellDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableFrameBtn)
                .addContainerGap())
        );

        saveCsvBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/small/glyphicons_443_floppy_disk.png"))); // NOI18N
        saveCsvBtn.setText("Save (.csv)");

        closeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/small/glyphicons_192_circle_remove.png"))); // NOI18N
        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        dataTable.setAutoCreateRowSorter(true);
        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        dataTable.setCellSelectionEnabled(true);
        dataTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        dataTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dataTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(dataTable);
        dataTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/white/glyphicons_443_floppy_disk.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        toolBar.add(jButton2);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/white/glyphicons_137_cogwheels.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        toolBar.add(jButton1);

        tableSettingsBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/cig/restca/img/glyphicon/small/glyphicons_137_cogwheels.png"))); // NOI18N
        tableSettingsBtn.setText("Table Settings");
        tableSettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableSettingsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 814, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tableSettingsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveCsvBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cellDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(closeBtn)
                            .addComponent(saveCsvBtn)
                            .addComponent(tableSettingsBtn)))
                    .addComponent(cellDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        try {
            int row = dataTable.getSelectedRow();
            int col = dataTable.getSelectedColumn();

            String columnName = dataTable.getColumnName(col);
            cellDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Cell Data: [Column: " + columnName + "][Row: " + row + "]"));

            String data = dataTable.getValueAt(row, col).toString();
            if (JSONData.isJSON(data)) {
                dataTextArea.setText(JSONData.toJSONString(data, 5));
                this.tableFrameBtn.setEnabled(true);
            } else {
                dataTextArea.setText(data);
                this.tableFrameBtn.setEnabled(false);
            }
        } catch (Exception exc) {
            Logger.getLogger(TableFormFrame.class.getName()).log(Level.SEVERE, null, exc);
        }
    }//GEN-LAST:event_dataTableMouseClicked

    private void tableFrameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableFrameBtnActionPerformed
        int row = dataTable.getSelectedRow();
        int col = dataTable.getSelectedColumn();

        String columnName = dataTable.getColumnName(col);
        String data = this.dataTextArea.getText();
        controller.openTabularFormDialog(data, "[Column: "+columnName + " Row: "+row+"]");
    }//GEN-LAST:event_tableFrameBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tableSettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableSettingsBtnActionPerformed
        TableModel model = this.dataTable.getModel();
        this.controller.changeTableSettings(model, this);
    }//GEN-LAST:event_tableSettingsBtnActionPerformed

    private void dataTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataTableKeyPressed
        dataTableMouseClicked(null);
    }//GEN-LAST:event_dataTableKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel cellDataPanel;
    private javax.swing.JButton closeBtn;
    private javax.swing.JTable dataTable;
    private javax.swing.JTextArea dataTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveCsvBtn;
    private javax.swing.JButton tableFrameBtn;
    private javax.swing.JButton tableSettingsBtn;
    private javax.swing.JToolBar toolBar;
    // End of variables declaration//GEN-END:variables
}
